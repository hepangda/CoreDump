C8255PORTA = 0600H
C8255PORTB = 0602H
C8255CONTL = 0606H
CADC0809   = 0640H
POSLEFT    = 110B
POSMIDDLE  = 101B
POSRIGHT   = 011B
POSNULL    = 111B
MINUS      = 40H
ZERO       = 0

DATA SEGMENT
	;           0    1    2    3    4    5    6    7    8    9
	NUMBERS DB 3FH, 06H, 5BH, 4FH, 66H, 6DH, 7DH, 07H, 7FH, 6FH
	VALUE   DB 0
DATA ENDS

STACKS SEGMENT STACK
	DW 128 DUP(?)
STACKS ENDS

CODE SEGMENT
	ASSUME CS: CODE, DS: DATA, SS: STACKS
MAIN:
	MOV  AX, DATA
	MOV  DS, AX
	
	MOV  AL, 10000000B
	MOV  DX, C8255CONTL
	OUT  DX, AL

VLOOP:
	MOV  DX, CADC0809
	OUT  DX, AL
	CALL DECIDE
	CALL PRINTN
	
	IN	 AL, DX
	LEA  BX, VALUE
	MOV  BYTE PTR [BX], AL
	JMP  VLOOP
	
DECIDE PROC NEAR
	PUSH BX
	PUSH DX
	
  ; DIV SRC : (AX)/SRC  AL SHANG AH YUSHU
  ; MUL SRC : SRC * (AL)  (AX) JIEGUO
	LEA  BX, VALUE
	MOV  AX, 0
	MOV  AL, [BX]
	MOV  BL, 3
	DIV  BL
	MOV  DL, AL
	; R <- %DL
	CMP  DL, 20
	JAE  DECIDE_CALC_AE0
	
	MOV  BH, MINUS
	MOV  DH, 20
	SUB  DH, DL
	MOV  DL, DH
DECIDE_CALC_AE0:
	MOV  AL, DL
	MOV  AH, 0
	MOV  BL, 10
	DIV  BL
	MOV  DH, AL
	; SHI <- %DH
	
	MOV  AL, DH
	MOV  AH, 0
	MOV  BL, 10
	MUL  BL
	MOV  CH, AL
	; X <- %CH
	
	MOV  CL, DL
	SUB  CL, CH
	; GE <- %CL
	
	CMP  BH, MINUS
	JE   DECIDE_END
	MOV  BH, ZERO
	SUB  DH, 2
	
DECIDE_END:
	MOV  AL, BH
	MOV  AH, DH
	POP  DX
	POP  BX
	RET
DECIDE ENDP

; prototype: void CLEARALL()
; return   : (x)
CLEARALL PROC NEAR
	PUSH AX
	PUSH DX
	
	MOV  DX, C8255PORTB
	MOV  AL, POSNULL
	OUT  DX, AL  
	
	POP  DX
	POP  AX
	RET
CLEARALL ENDP


; prototype: void PRINTN(%al A, %ah B, %cl C)
; return   : (x)
PRINTN PROC NEAR
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
  ;; left
	CALL OUTPORTA
	MOV  AL, POSLEFT
	CALL OUTPORTB
	CALL CLEARALL

  ;; middle
	MOV  AL, AH
	CALL LOADADDR
	MOV  AL, [BX]
	CALL OUTPORTA
	
	MOV  AL, POSMIDDLE
	CALL OUTPORTB
	CALL CLEARALL

  ;; right
	MOV  AL, CL
	CALL LOADADDR
	MOV  AL, [BX]
	CALL OUTPORTA
	
	MOV  AL, POSRIGHT
	CALL OUTPORTB
	CALL CLEARALL
	
	POP  DX
	POP  CX
	POP  BX
	POP  AX
	RET
PRINTN ENDP

; prototype: char *LOADADDR(%al number)
; return   : %bx
LOADADDR PROC NEAR
	PUSH AX
	PUSH SI
	
	MOV  AH, 0
	LEA  BX, NUMBERS
	MOV  SI, AX
	ADD  BX, SI
	
	POP  SI
	POP  AX
	RET
LOADADDR ENDP

; prototype: void OUTPORTA(%al byte)
; return   : (x)
OUTPORTA PROC NEAR
	PUSH DX
	MOV  DX, C8255PORTA
	OUT  DX, AL
	POP  DX
	RET
OUTPORTA ENDP

; prototype: void OUTPORTB(%al byte)
; return   : (x)
OUTPORTB PROC NEAR
	PUSH DX
	MOV  DX, C8255PORTB
	OUT  DX, AL
	POP  DX
	RET
OUTPORTB ENDP	
	
CODE ENDS
	END  MAIN